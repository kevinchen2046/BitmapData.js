{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/bitmap/BitmapData.ts","webpack:///./src/bitmap/ColorTransform.ts","webpack:///./src/bitmap/Matrix.ts","webpack:///./src/bitmap/Point.ts","webpack:///./src/bitmap/Rectangle.ts","webpack:///./src/bitmap/Simplex.ts","webpack:///./src/bitmap/filters/ColorMatrixFilter.ts","webpack:///./src/bitmap/modes/Difference.ts","webpack:///./src/examples/ExBlendModes.ts","webpack:///./src/examples/ExChannels.ts","webpack:///./src/examples/ExColorMatrixFilter.ts","webpack:///./src/examples/ExColorTransform.ts","webpack:///./src/examples/ExDefault.ts","webpack:///./src/examples/ExGPU.ts","webpack:///./src/examples/ExNoise.ts","webpack:///./src/examples/ExPalettemap.ts","webpack:///./src/examples/ExPlasma.ts","webpack:///./src/examples/ExRotozoomer.ts","webpack:///./src/examples/ExThreshold.ts","webpack:///./src/examples/Example.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*\n * BitmapData.js by Peter Nitsch - https://github.com/pnitsch/BitmapData.js\n * HTML5 Canvas API implementation of the AS3 BitmapData class. \n */\n\nimport { ColorTransform } from \"./ColorTransform\";\nimport { ColorMatrixFilter } from \"./filters/ColorMatrixFilter\";\nimport { Matrix } from \"./Matrix\";\nimport { Point } from \"./Point\";\nimport { Rectangle } from \"./Rectangle\";\nimport { Rand, SimplexNoise } from \"./Simplex\";\n\nconst halfColorMax = 0.00784313725;\n\nexport enum BlendMode {\n\tADD = \"add\",\n\tALPHA = \"alpha\",\n\tDARKEN = \"darken\",\n\tDIFFERENCE = \"difference\",\n\tERASE = \"erase\",\n\tHARDLIGHT = \"hardlight\",\n\tINVERT = \"invert\",\n\tLAYER = \"layer\",\n\tLIGHTEN = \"lighten\",\n\tMULTIPLY = \"multiply\",\n\tNORMAL = \"normal\",\n\tOVERLAY = \"overlay\",\n\tSCREEN = \"screen\",\n\tSHADER = \"shader\",\n\tSUBTRACT = \"subtract\"\n};\n\nexport enum BitmapDataChannel {\n\tALPHA = 8,\n\tBLUE = 4,\n\tGREEN = 2,\n\tRED = 1\n};\n\n// RGB <-> Hex conversion\nexport function hexToRGB(hex:number) { return { r: ((hex & 0xff0000) >> 16), g: ((hex & 0x00ff00) >> 8), b: ((hex & 0x0000ff)) }; };\nexport function RGBToHex(rgb:{r:number,g:number,b:number}) { return rgb.r << 16 | rgb.g << 8 | rgb.b; };\n\n// 256-value binary Vector struct\nfunction histogramVector(n) {\n\tlet v: number[] = [];\n\tfor (var i = 0; i < 256; i++) { v[i] = n; }\n\treturn v\n}\n\n// Park-Miller-Carta Pseudo-Random Number Generator\nfunction PRNG() {\n\tthis.seed = 1;\n\tthis.next = function () { return (this.gen() / 2147483647); };\n\tthis.nextRange = function (min, max) { return min + ((max - min) * this.next()) };\n\tthis.gen = function () { return this.seed = (this.seed * 16807) % 2147483647; };\n};\n\nexport class BitmapData {\n\tpublic width: number;\n\tpublic height: number;\n\tpublic rect: Rectangle;\n\tpublic transparent: boolean;\n\tpublic canvas: HTMLCanvasElement;\n\tpublic context: CanvasRenderingContext2D;\n\tpublic drawingCanvas: HTMLCanvasElement;\n\tpublic drawingContext: CanvasRenderingContext2D;\n\tpublic imagedata: ImageData;\n\tpublic glCanvas: HTMLCanvasElement;\n\tpublic gl: WebGLRenderingContext;\n\tpublic program: WebGLProgram;\n\tpublic gpuEnabled: boolean;\n\tpublic va: WebGLBuffer;\n\tpublic tex0: WebGLTexture;\n\tpublic tex1: WebGLTexture;\n\tpublic glPixelArray: Uint8Array\n\tconstructor(width, height, transparent?, fillColor?, canvas?) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.rect = new Rectangle(0, 0, this.width, this.height);\n\t\tthis.transparent = transparent || false;\n\n\t\tthis.canvas = canvas || document.createElement(\"canvas\");\n\t\tthis.context = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\t\tthis.canvas.setAttribute('width', this.width + '');\n\t\tthis.canvas.setAttribute('height', this.height + '');\n\n\t\tthis.drawingCanvas = document.createElement(\"canvas\");\n\t\tthis.drawingContext = this.drawingCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n\t\tthis.imagedata = this.context.createImageData(this.width, this.height);\n\n\t\t/*** WebGL functions ***/\n\t\tthis.glCanvas = document.createElement(\"canvas\");\n\t\t// this.gl = null;\n\t\t// this.program = null;\n\t\tthis.gpuEnabled = true;\n\t\ttry { this.gl = this.glCanvas.getContext(\"experimental-webgl\") as WebGLRenderingContext; }\n\t\tcatch (e) { this.gpuEnabled = false; }\n\n\t\t// this.va = null;\n\t\t// this.tex0 = null;\n\t\t// this.tex1 = null;\n\t\t// this.glPixelArray = null;\n\n\t\tif (fillColor) this.fillRect(this.rect, fillColor);\n\t\telse this.fillRect(this.rect, 0);\n\t}\n\n\tdispose(){\n\t\tif(this.gl){\n\t\t\tif(this.program) this.gl.deleteProgram(this.program);\n\t\t}\n\t\tif(this.glCanvas&&this.glCanvas.parentElement){\n\t\t\tthis.glCanvas.parentElement.removeChild(this.glCanvas);\n\t\t}\n\t\tif(this.drawingCanvas&&this.drawingCanvas.parentElement){\n\t\t\tthis.drawingCanvas.parentElement.removeChild(this.drawingCanvas);\n\t\t}\n\t\tif(this.canvas&&this.canvas.parentElement){\n\t\t\tthis.canvas.parentElement.removeChild(this.canvas);\n\t\t}\n\t}\n\n\tget data() { return this.imagedata; };\n\tset data(source) { this.imagedata = source; };\n\tinitProgram(effect: { vsSrc: string, fsSrc: string }) {\n\t\tvar gl = this.gl;\n\t\tvar program = gl.createProgram() as WebGLProgram;\n\n\t\tvar vs = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n\t\tvar fs = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n\n\t\tgl.shaderSource(vs, effect.vsSrc);\n\t\tgl.shaderSource(fs, effect.fsSrc);\n\t\tgl.compileShader(vs);\n\t\tgl.compileShader(fs);\n\n\t\tif (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) { gl.deleteProgram(program); }\n\t\tif (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) { gl.deleteProgram(program); }\n\n\t\tgl.attachShader(program, vs);\n\t\tgl.attachShader(program, fs);\n\t\tgl.deleteShader(vs);\n\t\tgl.deleteShader(fs);\n\n\t\tgl.linkProgram(program);\n\t\tif (this.program != null) gl.deleteProgram(this.program);\n\t\tthis.program = program;\n\n\t\tgl.viewport(0, 0, this.canvas.width, this.canvas.height);\n\t\tgl.useProgram(program);\n\n\t\tvar vertices = new Float32Array(\n\t\t\t[-1.0, -1.0,\n\t\t\t\t1.0, -1.0,\n\t\t\t-1.0, 1.0,\n\t\t\t\t1.0, -1.0,\n\t\t\t\t1.0, 1.0,\n\t\t\t-1.0, 1.0]);\n\n\t\tthis.va = gl.createBuffer() as WebGLBuffer;\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.va);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\t};\n\n\tinitTexture(pos:number, image:HTMLImageElement) {\n\t\tvar gl = this.gl;\n\t\tvar tex = gl.createTexture() as WebGLTexture;\n\n\t\tgl.enable(gl.TEXTURE_2D);\n\t\tgl.bindTexture(gl.TEXTURE_2D, tex);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n\t\tgl.generateMipmap(gl.TEXTURE_2D)\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\tif (pos == 0) {\n\t\t\tif (this.tex0 != null) gl.deleteTexture(this.tex0);\n\t\t\tthis.tex0 = tex;\n\n\t\t\tthis.glCanvas.setAttribute('width', image.width+'');\n\t\t\tthis.glCanvas.setAttribute('height', image.height+'');\n\t\t\tthis.glPixelArray = new Uint8Array(image.width * image.height * 4);\n\t\t} else {\n\t\t\tif (this.tex1 != null) gl.deleteTexture(this.tex1);\n\t\t\tthis.tex1 = tex;\n\t\t}\n\t};\n\n\tdrawGL(matrix:Matrix) {\n\t\tvar gl = this.gl;\n\t\tvar program = this.program;\n\t\tvar ra = [matrix.a, matrix.c, 0, matrix.b, matrix.d, 0, 0, 0, 1];\n\n\t\tvar p = gl.getAttribLocation(program, \"pos\");\n\t\tvar ur = gl.getUniformLocation(program, \"r\");\n\t\tvar ut = gl.getUniformLocation(program, \"t\");\n\t\tvar t0 = gl.getUniformLocation(program, \"tex0\");\n\t\tvar t1 = gl.getUniformLocation(program, \"tex1\");\n\t\tvar rm = gl.getUniformLocation(program, \"rMat\");\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.va);\n\n\t\tgl.uniform2f(ur, this.glCanvas.width * 2, this.glCanvas.height * 2);\n\t\tgl.uniformMatrix3fv(rm, false, new Float32Array(ra));\n\t\tgl.uniform2f(ut, matrix.tx, matrix.ty);\n\n\t\tgl.vertexAttribPointer(p, 2, gl.FLOAT, false, 0, 0);\n\t\tgl.enableVertexAttribArray(p);\n\n\t\tgl.uniform1i(t0, 0);\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.tex0);\n\n\t\tgl.uniform1i(t1, 1);\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.tex1);\n\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 6);\n\t\tgl.disableVertexAttribArray(p);\n\n\t\tgl.flush();\n\n\t\tvar w = this.glCanvas.width;\n\t\tvar h = this.glCanvas.height;\n\t\tvar arr = this.glPixelArray;\n\t\tgl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, arr);\n\n\t\tvar pos;\n\t\tvar data = this.imagedata.data;\n\t\tfor (var y = 0; y < h; y++) {\n\t\t\tfor (var x = 0; x < w; x++) {\n\t\t\t\tpos = (x + y * w) * 4;\n\t\t\t\tdata[pos] = arr[pos];\n\t\t\t\tdata[pos + 1] = arr[pos + 1];\n\t\t\t\tdata[pos + 2] = arr[pos + 2];\n\t\t\t}\n\t\t}\n\t};\n\n\t/*** Canvas2D functions ***/\n\n\tsetPixel(x:number, y:number, color:number) {\n\t\tvar rgb = hexToRGB(color);\n\t\tvar pos = (x + y * this.width) * 4;\n\t\tvar data = this.imagedata.data;\n\n\t\tdata[pos + 0] = rgb.r;\n\t\tdata[pos + 1] = rgb.g;\n\t\tdata[pos + 2] = rgb.b;\n\t};\n\n\tgetPixel(x:number, y:number) {\n\t\tvar pos = (x + y * this.width) * 4;\n\t\tvar data = this.imagedata.data;\n\t\tvar rgb = {\n\t\t\tr: data[pos + 0],\n\t\t\tg: data[pos + 1],\n\t\t\tb: data[pos + 2]\n\t\t};\n\n\t\treturn RGBToHex(rgb);\n\t};\n\n\tclear(rect:Rectangle) {\n\t\trect = rect || this.rect;\n\t\tthis.context.clearRect(rect.x, rect.y, rect.width, rect.height);\n\t\tthis.imagedata = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n\t};\n\n\tclone() {\n\t\tthis.context.putImageData(this.imagedata, 0, 0);\n\n\t\tvar result = new BitmapData(this.width, this.height, this.transparent);\n\t\tresult.data = this.context.getImageData(0, 0, this.width, this.height);\n\t\treturn result;\n\t};\n\n\tcolorTransform(rect:Rectangle, colorTransform:ColorTransform) {\n\t\trect = rect || this.rect;\n\t\tcolorTransform = colorTransform || new ColorTransform();\n\n\t\tvar data = this.imagedata.data;\n\t\tvar xMax = rect.x + rect.height;\n\t\tvar yMax = rect.y + rect.height;\n\n\t\tfor (var y = rect.y; y < yMax; y++) {\n\t\t\tfor (var x = rect.x; x < xMax; x++) {\n\t\t\t\tvar r = (y * this.width + x) * 4;\n\t\t\t\tvar g = r + 1;\n\t\t\t\tvar b = r + 2\n\t\t\t\tvar a = r + 3;\n\n\t\t\t\tdata[r] = data[r] * colorTransform.redMultiplier + colorTransform.redOffset;\n\t\t\t\tdata[g] = data[g] * colorTransform.greenMultiplier + colorTransform.greenOffset;\n\t\t\t\tdata[b] = data[b] * colorTransform.blueMultiplier + colorTransform.blueOffset;\n\t\t\t\tdata[a] = data[a] * colorTransform.alphaMultiplier + colorTransform.alphaOffset;\n\t\t\t}\n\t\t}\n\n\t\tthis.context.putImageData(this.imagedata, 0, 0);\n\t}\n\n\tapplyFilter(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, filter:ColorMatrixFilter) {\n\t\tvar copy = this.clone();\n\t\tfilter.run(sourceRect, this.imagedata.data, copy.imagedata.data);\n\t\tthis.context.putImageData(this.imagedata, 0, 0);\n\t};\n\n\tcompare(otherBitmapData) {\n\t\tif (this.width != otherBitmapData.width) return -3;\n\t\tif (this.height != otherBitmapData.height) return -4;\n\t\tif (this.imagedata === otherBitmapData.data) return 0;\n\n\t\tvar otherRGB, thisRGB, dif;\n\t\tvar result = new BitmapData(this.width, this.height);\n\t\tfor (var y = 0; y < this.height; y++) {\n\t\t\tfor (var x = 0; x < this.width; x++) {\n\t\t\t\totherRGB = hexToRGB(otherBitmapData.getPixel(x, y));\n\t\t\t\tthisRGB = hexToRGB(this.getPixel(x, y));\n\n\t\t\t\tdif = {\n\t\t\t\t\tr: Math.abs(otherRGB.r - thisRGB.r),\n\t\t\t\t\tg: Math.abs(otherRGB.g - thisRGB.g),\n\t\t\t\t\tb: Math.abs(otherRGB.b - thisRGB.b)\n\t\t\t\t};\n\n\t\t\t\tresult.setPixel(x, y, RGBToHex(dif));\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tcopyCanvas(sourceCanvas:HTMLCanvasElement, sourceRect:Rectangle, destPoint:Point, blendMode?:BlendMode) {\n\t\tthis.context.putImageData(this.imagedata, 0, 0);\n\n\t\tvar bw = this.canvas.width - sourceRect.width - destPoint.x;\n\t\tvar bh = this.canvas.height - sourceRect.height - destPoint.y\n\n\t\tvar dw = (bw < 0) ? sourceRect.width + (this.canvas.width - sourceRect.width - destPoint.x) : sourceRect.width;\n\t\tvar dh = (bh < 0) ? sourceRect.height + (this.canvas.height - sourceRect.height - destPoint.y) : sourceRect.height;\n\n\t\tif (blendMode && blendMode != BlendMode.NORMAL) {\n\n\t\t\tvar sourceData = (sourceCanvas.getContext(\"2d\") as CanvasRenderingContext2D).getImageData(sourceRect.x, sourceRect.y, dw, dh).data;\n\t\t\tvar sourcePos, destPos;\n\t\t\tvar data = this.imagedata.data;\n\n\t\t\tfor (var y = 0; y < dh; y++) {\n\t\t\t\tfor (var x = 0; x < dw; x++) {\n\t\t\t\t\tsourcePos = (x + y * dw) * 4;\n\t\t\t\t\tdestPos = ((x + destPoint.x) + (y + destPoint.y) * this.width) * 4;\n\n\t\t\t\t\tswitch (blendMode) {\n\t\t\t\t\t\tcase BlendMode.ADD:\n\t\t\t\t\t\t\tdata[destPos] = Math.min(data[destPos] + sourceData[sourcePos], 255);\n\t\t\t\t\t\t\tdata[destPos + 1] = Math.min(data[destPos + 1] + sourceData[sourcePos + 1], 255);\n\t\t\t\t\t\t\tdata[destPos + 2] = Math.min(data[destPos + 2] + sourceData[sourcePos + 2], 255);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase BlendMode.SUBTRACT:\n\t\t\t\t\t\t\tdata[destPos] = Math.max(sourceData[sourcePos] - data[destPos], 0);\n\t\t\t\t\t\t\tdata[destPos + 1] = Math.max(sourceData[sourcePos + 1] - data[destPos + 1], 0);\n\t\t\t\t\t\t\tdata[destPos + 2] = Math.max(sourceData[sourcePos + 2] - data[destPos + 2], 0);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase BlendMode.INVERT:\n\t\t\t\t\t\t\tdata[destPos] = 255 - sourceData[sourcePos];\n\t\t\t\t\t\t\tdata[destPos + 1] = 255 - sourceData[sourcePos + 1];\n\t\t\t\t\t\t\tdata[destPos + 2] = 255 - sourceData[sourcePos + 1];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase BlendMode.MULTIPLY:\n\t\t\t\t\t\t\tdata[destPos] = Math.floor(sourceData[sourcePos] * data[destPos] / 255);\n\t\t\t\t\t\t\tdata[destPos + 1] = Math.floor(sourceData[sourcePos + 1] * data[destPos + 1] / 255);\n\t\t\t\t\t\t\tdata[destPos + 2] = Math.floor(sourceData[sourcePos + 2] * data[destPos + 2] / 255);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase BlendMode.LIGHTEN:\n\t\t\t\t\t\t\tif (sourceData[sourcePos] > data[destPos]) data[destPos] = sourceData[sourcePos];\n\t\t\t\t\t\t\tif (sourceData[sourcePos + 1] > data[destPos + 1]) data[destPos + 1] = sourceData[sourcePos + 1];\n\t\t\t\t\t\t\tif (sourceData[sourcePos + 2] > data[destPos + 2]) data[destPos + 2] = sourceData[sourcePos + 2];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase BlendMode.DARKEN:\n\t\t\t\t\t\t\tif (sourceData[sourcePos] < data[destPos]) data[destPos] = sourceData[sourcePos];\n\t\t\t\t\t\t\tif (sourceData[sourcePos + 1] < data[destPos + 1]) data[destPos + 1] = sourceData[sourcePos + 1];\n\t\t\t\t\t\t\tif (sourceData[sourcePos + 2] < data[destPos + 2]) data[destPos + 2] = sourceData[sourcePos + 2];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase BlendMode.DIFFERENCE:\n\t\t\t\t\t\t\tdata[destPos] = Math.abs(sourceData[sourcePos] - data[destPos]);\n\t\t\t\t\t\t\tdata[destPos + 1] = Math.abs(sourceData[sourcePos + 1] - data[destPos + 1]);\n\t\t\t\t\t\t\tdata[destPos + 2] = Math.abs(sourceData[sourcePos + 2] - data[destPos + 2]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase BlendMode.SCREEN:\n\t\t\t\t\t\t\tdata[destPos] = (255 - (((255 - data[destPos]) * (255 - sourceData[sourcePos])) >> 8));\n\t\t\t\t\t\t\tdata[destPos + 1] = (255 - (((255 - data[destPos + 1]) * (255 - sourceData[sourcePos + 1])) >> 8));\n\t\t\t\t\t\t\tdata[destPos + 2] = (255 - (((255 - data[destPos + 2]) * (255 - sourceData[sourcePos + 2])) >> 8));\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase BlendMode.OVERLAY:\n\t\t\t\t\t\t\tif (sourceData[sourcePos] < 128) data[destPos] = data[destPos] * sourceData[sourcePos] * halfColorMax;\n\t\t\t\t\t\t\telse data[destPos] = 255 - (255 - data[destPos]) * (255 - sourceData[sourcePos]) * halfColorMax;\n\n\t\t\t\t\t\t\tif (sourceData[sourcePos + 1] < 128) data[destPos + 1] = data[destPos + 1] * sourceData[sourcePos + 1] * halfColorMax;\n\t\t\t\t\t\t\telse data[destPos + 1] = 255 - (255 - data[destPos + 1]) * (255 - sourceData[sourcePos + 1]) * halfColorMax;\n\n\t\t\t\t\t\t\tif (sourceData[sourcePos + 2] < 128) data[destPos + 2] = data[destPos + 2] * sourceData[sourcePos + 2] * halfColorMax;\n\t\t\t\t\t\t\telse data[destPos + 2] = 255 - (255 - data[destPos + 2]) * (255 - sourceData[sourcePos + 2]) * halfColorMax;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase BlendMode.HARDLIGHT:\n\t\t\t\t\t\t\tif (data[destPos] < 128) data[destPos] = data[destPos] * sourceData[sourcePos] * halfColorMax;\n\t\t\t\t\t\t\telse data[destPos] = 255 - (255 - data[destPos]) * (255 - sourceData[sourcePos]) * halfColorMax;\n\n\t\t\t\t\t\t\tif (data[destPos + 1] < 128) data[destPos + 1] = data[destPos + 1] * sourceData[sourcePos + 1] * halfColorMax;\n\t\t\t\t\t\t\telse data[destPos + 1] = 255 - (255 - data[destPos + 1]) * (255 - sourceData[sourcePos + 1]) * halfColorMax;\n\n\t\t\t\t\t\t\tif (data[destPos + 2] < 128) data[destPos + 2] = data[destPos + 2] * sourceData[sourcePos + 2] * halfColorMax;\n\t\t\t\t\t\t\telse data[destPos + 2] = 255 - (255 - data[destPos + 2]) * (255 - sourceData[sourcePos + 2]) * halfColorMax;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.context.drawImage(sourceCanvas,\n\t\t\t\tsourceRect.x, sourceRect.y, dw, dh,\n\t\t\t\tdestPoint.x, destPoint.y, dw, dh);\n\n\t\t\tthis.imagedata = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n\t\t}\n\n\t\tthis.context.putImageData(this.imagedata, 0, 0);\n\t};\n\n\tcopyChannel(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:BitmapDataChannel, destChannel:BitmapDataChannel) {\n\t\tvar sourceColor, sourceRGB, rgb;\n\t\tvar redChannel = BitmapDataChannel.RED;\n\t\tvar greenChannel = BitmapDataChannel.GREEN;\n\t\tvar blueChannel = BitmapDataChannel.BLUE;\n\n\t\tfor (var y = 0; y < sourceRect.height; y++) {\n\t\t\tfor (var x = 0; x < sourceRect.width; x++) {\n\t\t\t\tsourceColor = sourceBitmapData.getPixel(sourceRect.x + x, sourceRect.y + y);\n\t\t\t\tsourceRGB = hexToRGB(sourceColor);\n\t\t\t\tlet channelValue: any;\n\t\t\t\tswitch (sourceChannel) {\n\t\t\t\t\tcase redChannel: channelValue = sourceRGB.r; break;\n\t\t\t\t\tcase greenChannel: channelValue = sourceRGB.g; break;\n\t\t\t\t\tcase blueChannel: channelValue = sourceRGB.b; break;\n\t\t\t\t}\n\n\t\t\t\trgb = hexToRGB(this.getPixel(destPoint.x + x, destPoint.y + y)); // redundancy\n\t\t\t\tswitch (destChannel) {\n\t\t\t\t\tcase redChannel: rgb.r = channelValue; break;\n\t\t\t\t\tcase greenChannel: rgb.g = channelValue; break;\n\t\t\t\t\tcase blueChannel: rgb.b = channelValue; break;\n\t\t\t\t}\n\n\t\t\t\tthis.setPixel(destPoint.x + x, destPoint.y + y, RGBToHex(rgb));\n\t\t\t}\n\t\t}\n\n\t\tthis.context.putImageData(this.imagedata, 0, 0);\n\t};\n\n\tcopyPixels(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, alphaBitmapData?:BitmapData, alphaPoint?:Point, mergeAlpha?) {\n\t\tthis.copyCanvas(sourceBitmapData.canvas, sourceRect, destPoint);\n\t};\n\n\tdraw(source:HTMLImageElement, matrix?:Matrix, colorTransform?:ColorTransform, blendMode?:BlendMode, clipRect?:Rectangle, smoothing?:boolean) {\n\n\t\t/*\n\t\t * currently only supports Image object\n\t\t * TODO: implement instanceof switches\n\t\t */\n\n\t\tlet sourceMatrix = matrix || new Matrix();\n\t\tlet sourceRect = clipRect || new Rectangle(0, 0, source.width, source.height);\n\n\t\tif (blendMode && this.gpuEnabled) {\n\t\t\t// TO DO\n\t\t}\n\n\t\tthis.drawingCanvas.setAttribute('width', source.width+'');\n\t\tthis.drawingCanvas.setAttribute('height', source.height+'');\n\n\t\tthis.drawingContext.transform(\n\t\t\tsourceMatrix.a,\n\t\t\tsourceMatrix.b,\n\t\t\tsourceMatrix.c,\n\t\t\tsourceMatrix.d,\n\t\t\tsourceMatrix.tx,\n\t\t\tsourceMatrix.ty);\n\n\t\tthis.drawingContext.drawImage(source,\n\t\t\t0, 0, source.width, source.height,\n\t\t\t0, 0, source.width, source.height);\n\n\t\tthis.copyCanvas(this.drawingCanvas, sourceRect, new Point(sourceRect.x, sourceRect.y), blendMode);\n\t}\n\n\tfillRect(rect:Rectangle, color:number) {\n\t\tthis.context.putImageData(this.imagedata, 0, 0);\n\t\tvar rgb = hexToRGB(color);\n\n\t\tthis.context.fillStyle = \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \")\";\n\t\tthis.context.fillRect(rect.x, rect.y, rect.width, rect.height);\n\t\tthis.imagedata = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n\t};\n\n\tfloodFill(x:number, y:number, color:number) {\n\t\tvar queue = new Array();\n\t\tqueue.push(new Point(x, y));\n\n\t\tvar old = this.getPixel(x, y);\n\t\tvar iterations = 0;\n\n\t\tvar searchBmp = new BitmapData(this.width, this.height, true, 0xffffff);\n\t\tvar currPoint, newPoint;\n\n\t\twhile (queue.length > 0) {\n\t\t\tcurrPoint = queue.shift();\n\t\t\t++iterations;\n\n\t\t\tif (currPoint.x < 0 || currPoint.x >= this.width) continue;\n\t\t\tif (currPoint.y < 0 || currPoint.y >= this.height) continue;\n\n\t\t\tsearchBmp.setPixel(currPoint.x, currPoint.y, 0x00);\n\n\t\t\tif (this.getPixel(currPoint.x, currPoint.y) == old) {\n\t\t\t\tthis.setPixel(currPoint.x, currPoint.y, color);\n\n\t\t\t\tif (searchBmp.getPixel(currPoint.x + 1, currPoint.y) == 0xffffff) {\n\t\t\t\t\tqueue.push(new Point(currPoint.x + 1, currPoint.y));\n\t\t\t\t}\n\t\t\t\tif (searchBmp.getPixel(currPoint.x, currPoint.y + 1) == 0xffffff) {\n\t\t\t\t\tqueue.push(new Point(currPoint.x, currPoint.y + 1));\n\t\t\t\t}\n\t\t\t\tif (searchBmp.getPixel(currPoint.x - 1, currPoint.y) == 0xffffff) {\n\t\t\t\t\tqueue.push(new Point(currPoint.x - 1, currPoint.y));\n\t\t\t\t}\n\t\t\t\tif (searchBmp.getPixel(currPoint.x, currPoint.y - 1) == 0xffffff) {\n\t\t\t\t\tqueue.push(new Point(currPoint.x, currPoint.y - 1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t};\n\n\thistogram(hRect:Rectangle) {\n\t\thRect = hRect || this.rect;\n\n\t\tvar rgb: { r: number[], g: number[], b: number[] } = { r: [], g: [], b: [] };\n\t\tvar rv = histogramVector(0);\n\t\tvar gv = histogramVector(0);\n\t\tvar bv = histogramVector(0);\n\n\t\tvar p = hRect.width * hRect.height;\n\t\tvar itr = -1;\n\t\tvar pos;\n\t\tvar color: number[] = [];\n\n\t\tvar bw = this.canvas.width - hRect.width - hRect.x;\n\t\tvar bh = this.canvas.height - hRect.height - hRect.y\n\t\tvar dw = (bw < 0) ? hRect.width + (this.canvas.width - hRect.width - hRect.x) : hRect.width;\n\t\tvar dh = (bh < 0) ? hRect.height + (this.canvas.height - hRect.height - hRect.y) : hRect.height;\n\n\t\tvar data = this.imagedata.data;\n\n\t\tfor (var y = hRect.y; y < dh; y++) {\n\t\t\tfor (var x = hRect.x; x < dw; x++) {\n\t\t\t\tpos = (x + y * this.width) * 4;\n\t\t\t\tcolor[itr++] = data[pos + 0];\n\t\t\t\tcolor[itr++] = data[pos + 1];\n\t\t\t\tcolor[itr++] = data[pos + 2];\n\t\t\t}\n\t\t}\n\n\t\titr = 0;\n\t\tfor (var i = 0; i < p; i += Math.floor(p / 256)) {\n\t\t\tlet px = itr * 3;\n\t\t\trv[itr] = color[px + 0];\n\t\t\tgv[itr] = color[px + 1];\n\t\t\tbv[itr] = color[px + 2];\n\t\t\titr++;\n\t\t}\n\n\t\trgb.r = rv;\n\t\trgb.g = gv;\n\t\trgb.b = bv;\n\n\t\treturn rgb;\n\t};\n\n\tpublic rand: Rand;\n\tnoise(randomSeed:number, low:number, high:number, channelOptions:number, grayScale:boolean) {\n\t\tthis.rand = this.rand || new PRNG();\n\t\tthis.rand.seed = randomSeed;\n\n\t\tvar redChannel = BitmapDataChannel.RED;\n\t\tvar greenChannel = BitmapDataChannel.GREEN;\n\t\tvar blueChannel = BitmapDataChannel.BLUE;\n\n\t\tvar data = this.imagedata.data;\n\n\t\tlow = low || 0;\n\t\thigh = high || 255;\n\t\tchannelOptions = channelOptions || 7;\n\t\tgrayScale = grayScale || false;\n\n\t\tvar pos, cr, cg, cb, gray;\n\t\tfor (var y = 0; y < this.height; y++) {\n\t\t\tfor (var x = 0; x < this.width; x++) {\n\t\t\t\tpos = (x + y * this.width) * 4;\n\n\t\t\t\tcr = this.rand.nextRange(low, high);\n\t\t\t\tcg = this.rand.nextRange(low, high);\n\t\t\t\tcb = this.rand.nextRange(low, high);\n\n\t\t\t\tif (grayScale) {\n\t\t\t\t\tgray = (cr + cg + cb) / 3;\n\t\t\t\t\tcr = cg = cb = gray;\n\t\t\t\t}\n\n\t\t\t\tdata[pos + 0] = (channelOptions & redChannel) ? (1 * cr) : 0x00;\n\t\t\t\tdata[pos + 1] = (channelOptions & greenChannel) ? (1 * cg) : 0x00;\n\t\t\t\tdata[pos + 2] = (channelOptions & blueChannel) ? (1 * cb) : 0x00;\n\t\t\t}\n\t\t}\n\t};\n\n\tpaletteMap(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redArray:number[], greenArray:number[], blueArray:number[], alphaArray?:number[]) {\n\t\tvar bw = this.canvas.width - sourceRect.width - destPoint.x;\n\t\tvar bh = this.canvas.height - sourceRect.height - destPoint.y\n\n\t\tvar dw = (bw < 0) ? sourceRect.width + (this.canvas.width - sourceRect.width - destPoint.x) : sourceRect.width;\n\t\tvar dh = (bh < 0) ? sourceRect.height + (this.canvas.height - sourceRect.height - destPoint.y) : sourceRect.height;\n\n\t\tvar sourceData = sourceBitmapData.imagedata.data;\n\t\tvar sourcePos, destPos, sourceHex;\n\t\tvar r, g, b, pos;\n\n\t\tvar sx = sourceRect.x;\n\t\tvar sy = sourceRect.y;\n\t\tvar sw = sourceBitmapData.width;\n\t\tvar dx = destPoint.x;\n\t\tvar dy = destPoint.y;\n\n\t\tvar data = this.imagedata.data;\n\t\tvar w = this.width;\n\n\t\tfor (var y = 0; y < dh; y++) {\n\t\t\tfor (var x = 0; x < dw; x++) {\n\t\t\t\tsourcePos = ((x + sx) + (y + sy) * sw) * 4;\n\n\t\t\t\tr = sourceData[sourcePos + 0];\n\t\t\t\tg = sourceData[sourcePos + 1];\n\t\t\t\tb = sourceData[sourcePos + 2];\n\n\t\t\t\tpos = ((x + dx) + (y + dy) * w) * 4;\n\n\t\t\t\tdata[pos + 0] = redArray[r];\n\t\t\t\tdata[pos + 1] = greenArray[g];\n\t\t\t\tdata[pos + 2] = blueArray[b];\n\t\t\t}\n\t\t}\n\n\t\tthis.context.putImageData(this.imagedata, 0, 0);\n\t};\n\tpublic simplexR: SimplexNoise;\n\tpublic simplexG: SimplexNoise;\n\tpublic simplexB: SimplexNoise;\n\tperlinNoise(baseX:number, baseY:number, randomSeed:number, channelOptions:BitmapDataChannel, grayScale:boolean) {\n\t\tthis.rand = this.rand || new PRNG();\n\t\tthis.rand.seed = randomSeed;\n\n\t\tvar redChannel = BitmapDataChannel.RED;\n\t\tvar greenChannel = BitmapDataChannel.GREEN;\n\t\tvar blueChannel = BitmapDataChannel.BLUE;\n\n\t\tchannelOptions = channelOptions || 7;\n\t\tgrayScale = grayScale || false;\n\n\t\tvar data = this.imagedata.data;\n\n\t\tvar numChannels = 0;\n\t\tif (channelOptions & redChannel) {\n\t\t\tthis.simplexR = this.simplexR || new SimplexNoise(this.rand);\n\t\t\tthis.simplexR.setSeed(randomSeed);\n\t\t\tnumChannels++;\n\t\t}\n\t\tif (channelOptions & greenChannel) {\n\t\t\tthis.simplexG = this.simplexG || new SimplexNoise(this.rand);\n\t\t\tthis.simplexG.setSeed(randomSeed + 1);\n\t\t\tnumChannels++;\n\t\t}\n\t\tif (channelOptions & blueChannel) {\n\t\t\tthis.simplexB = this.simplexB || new SimplexNoise(this.rand);\n\t\t\tthis.simplexB.setSeed(randomSeed + 2);\n\t\t\tnumChannels++;\n\t\t}\n\n\t\tvar pos, cr, cg, cb;\n\t\tfor (var y = 0; y < this.height; y++) {\n\t\t\tfor (var x = 0; x < this.width; x++) {\n\t\t\t\tpos = (x + y * this.width) * 4;\n\n\t\t\t\tcr = (channelOptions & redChannel) ? Math.floor(((this.simplexR.noise(x / baseX, y / baseY) + 1) * 0.5) * 255) : 0x00;\n\t\t\t\tcg = (channelOptions & greenChannel) ? Math.floor(((this.simplexG.noise(x / baseX, y / baseY) + 1) * 0.5) * 255) : 0x00;\n\t\t\t\tcb = (channelOptions & blueChannel) ? Math.floor(((this.simplexB.noise(x / baseX, y / baseY) + 1) * 0.5) * 255) : 0x00;\n\n\t\t\t\tif (grayScale) {\n\t\t\t\t\tlet gray = (cr + cg + cb) / numChannels;\n\t\t\t\t\tcr = cg = cb = gray;\n\t\t\t\t}\n\n\t\t\t\tdata[pos + 0] = cr;\n\t\t\t\tdata[pos + 1] = cg;\n\t\t\t\tdata[pos + 2] = cb;\n\t\t\t}\n\t\t}\n\n\t\tthis.context.putImageData(this.imagedata, 0, 0);\n\t};\n\n\tthreshold(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, operation:\"<\"|\">\"|\"<=\"|\">=\"|\"==\"|\"!=\", threshold:number, color:number, mask:number, copySource:boolean) {\n\t\tcolor = color || 0;\n\t\tmask = mask || 0xffffff;\n\t\tcopySource = copySource || false;\n\n\t\tvar bw = this.canvas.width - sourceRect.width - destPoint.x;\n\t\tvar bh = this.canvas.height - sourceRect.height - destPoint.y\n\n\t\tvar dw = (bw < 0) ? sourceRect.width + (this.canvas.width - sourceRect.width - destPoint.x) : sourceRect.width;\n\t\tvar dh = (bh < 0) ? sourceRect.height + (this.canvas.height - sourceRect.height - destPoint.y) : sourceRect.height;\n\n\t\tvar sourceData = sourceBitmapData.imagedata.data;\n\t\tvar sourcePos, destPos, sourceHex;\n\n\t\tvar sx = sourceRect.x;\n\t\tvar sy = sourceRect.y;\n\t\tvar sw = sourceBitmapData.width;\n\n\t\tfor (var y = 0; y < dh; y++) {\n\t\t\tfor (var x = 0; x < dw; x++) {\n\t\t\t\tsourcePos = ((x + sx) + (y + sy) * sw) * 4;\n\t\t\t\tsourceHex = RGBToHex({ r: sourceData[sourcePos], g: sourceData[sourcePos + 1], b: sourceData[sourcePos + 2] });\n\n\t\t\t\tswitch (operation) {\n\t\t\t\t\tcase \"<\":\n\t\t\t\t\t\tif ((sourceHex & mask) < (threshold & mask)) {\n\t\t\t\t\t\t\tif (copySource) this.setPixel(x + destPoint.x, y + destPoint.y, sourceHex); else this.setPixel(x + destPoint.x, y + destPoint.y, color);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"<=\":\n\t\t\t\t\t\tif ((sourceHex & mask) <= (threshold & mask)) {\n\t\t\t\t\t\t\tif (copySource) this.setPixel(x + destPoint.x, y + destPoint.y, sourceHex); else this.setPixel(x + destPoint.x, y + destPoint.y, color);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \">\":\n\t\t\t\t\t\tif ((sourceHex & mask) > (threshold & mask)) {\n\t\t\t\t\t\t\tif (copySource) this.setPixel(x + destPoint.x, y + destPoint.y, sourceHex); else this.setPixel(x + destPoint.x, y + destPoint.y, color);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \">=\":\n\t\t\t\t\t\tif ((sourceHex & mask) <= (threshold & mask)) {\n\t\t\t\t\t\t\tif (copySource) this.setPixel(x + destPoint.x, y + destPoint.y, sourceHex); else this.setPixel(x + destPoint.x, y + destPoint.y, color);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"==\":\n\t\t\t\t\t\tif ((sourceHex & mask) == (threshold & mask)) {\n\t\t\t\t\t\t\tif (copySource) this.setPixel(x + destPoint.x, y + destPoint.y, sourceHex); else this.setPixel(x + destPoint.x, y + destPoint.y, color);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"!=\":\n\t\t\t\t\t\tif ((sourceHex & mask) != (threshold & mask)) {\n\t\t\t\t\t\t\tif (copySource) this.setPixel(x + destPoint.x, y + destPoint.y, sourceHex); else this.setPixel(x + destPoint.x, y + destPoint.y, color);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tthis.context.putImageData(this.imagedata, 0, 0);\n\t};\n\n};\n\n\nObject.defineProperty(HTMLCanvasElement.prototype, \"bitmapData\", {\n\tget: function () {\n\t\tif (!this._bitmapData) {\n\t\t\tthis._bitmapData = new BitmapData(this.width, this.height, false, 0, this);\n\t\t}\n\t\treturn this._bitmapData;\n\t}\n})\n","export class ColorTransform {\n\tpublic redMultiplier: number;\n\tpublic greenMultiplier: number;\n\tpublic blueMultiplier: number;\n\tpublic alphaMultiplier: number;\n\tpublic redOffset: number;\n\tpublic greenOffset: number;\n\tpublic blueOffset: number;\n\tpublic alphaOffset: number;\n\tconstructor(redMultiplier?, greenMultiplier?, blueMultiplier?, alphaMultiplier?, redOffset?, greenOffset?, blueOffset?, alphaOffset?) {\n\t\tthis.redMultiplier = redMultiplier == undefined ? 1 : redMultiplier;\n\t\tthis.greenMultiplier = greenMultiplier == undefined ? 1 : greenMultiplier;\n\t\tthis.blueMultiplier = blueMultiplier == undefined ? 1 : blueMultiplier;\n\t\tthis.alphaMultiplier = alphaMultiplier == undefined ? 1 : alphaMultiplier;\n\t\tthis.redOffset = redOffset || 0;\n\t\tthis.greenOffset = greenOffset || 0;\n\t\tthis.blueOffset = blueOffset || 0;\n\t\tthis.alphaOffset = alphaOffset || 0;\n\t}\n}","export function radianToDegree(angle) { return angle * (180.0 / Math.PI); }\nexport function degreeToRadian(angle) { return Math.PI * angle / 180.0; }\n\nexport class Matrix {\n\tpublic elements: number[];\n\tpublic angle: number;\n\tconstructor(a?, b?, c?, d?, tx?, ty?) {\n\t\tthis.elements =\n\t\t\t[\n\t\t\t\ta || 1, c || 0, tx || 0,\n\t\t\t\tb || 0, d || 1, ty || 0\n\t\t\t];\n\n\t\tthis.angle = 0; // faster but dumber method\n\t}\n\n\tget a() { return this.elements[0]; };\n\tset a(n) { this.elements[0] = n; };\n\tget b() { return this.elements[3]; };\n\tset b(n) { this.elements[3] = n; };\n\tget c() { return this.elements[1]; };\n\tset c(n) { this.elements[1] = n; };\n\tget d() { return this.elements[4]; };\n\tset d(n) { this.elements[4] = n; };\n\tget tx() { return this.elements[2]; };\n\tset tx(n) { this.elements[2] = n; };\n\tget ty() { return this.elements[5]; };\n\tset ty(n) { this.elements[5] = n; };\n\n\tclone() {\n\t};\n\n\tconcat(m) {\n\t};\n\n\tidentity() {\n\t\tthis.elements = [1, 0, 0, 1, 0, 0];\n\t};\n\n\tscale(sx, sy) {\n\t\tif (sx && !sy) {\n\t\t\tsy = sx;\n\t\t}\n\t\tif (sx && sy) {\n\t\t\tthis.elements[0] *= sx;\n\t\t\tthis.elements[1] *= sy;\n\t\t\tthis.elements[3] *= sx;\n\t\t\tthis.elements[4] *= sy;\n\t\t}\n\t};\n\n\ttranslate(dx, dy) {\n\t\tthis.elements[2] = dx * this.elements[0] + dy * this.elements[1] + this.elements[2];\n\t\tthis.elements[5] = dx * this.elements[3] + dy * this.elements[4] + this.elements[5];\n\t};\n\n\n\trotate(angle) {\n\t\tthis.angle += angle;\n\n\t\tlet r = radianToDegree(angle);\n\t\tlet c = Math.cos(angle);\n\t\tlet s = Math.sin(angle);\n\n\t\tlet temp1 = this.elements[0];\n\t\tlet temp2 = this.elements[1];\n\t\tthis.elements[0] = c * temp1 + s * temp2;\n\t\tthis.elements[1] = -s * temp1 + c * temp2;\n\n\t\ttemp1 = this.elements[3];\n\t\ttemp2 = this.elements[4];\n\t\tthis.elements[3] = c * temp1 + s * temp2;\n\t\tthis.elements[4] = -s * temp1 + c * temp2;\n\n\t};\n\n\n}","/**\n* The Point object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis.\n* @constructor\n* @author Leandro Ferreira\n*/\nexport class Point {\n\tpublic x: number;\n\tpublic y: number;\n\tconstructor(x?: number, y?: number) {\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t}\n\tget length() { return Math.sqrt(this.x * this.x + this.y * this.y); };\n\n\t/**\n\t* Adds the coordinates of another point to the coordinates of this point to create a new point.\n\t* @param {Point} v The point to be added.\n\t* @returns {Point} The new Point.\n\t*/\n\tadd(v) {\n\t\treturn new Point(this.x + v.x, this.y + v.y);\n\t}\n\n\t/**\n\t* Creates a copy of this Point object.\n\t* @returns {Point} The new Point.\n\t*/\n\tclone() {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\t/**\n\t* [static] Returns the distance between pt1 and pt2.\n\t* @param {Point} p1 The first point.\n\t* @param {Point} p2 The second point.\n\t* @returns {Number} The distance between the first and second points.\n\t*/\n\tstatic distance(p1: Point, p2: Point) {\n\t\tvar dx = p2.x - p1.x;\n\t\tvar dy = p2.y - p1.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\n\t/**\n\t* Determines whether two points are equal.\n\t* @param {Point} toCompare The point to be compared.\n\t* @returns {Boolean} True if the object is equal to this Point object; false if it is not equal.\n\t*/\n\tequals(toCompare) {\n\t\treturn this.x == toCompare.x && this.y == toCompare.y;\n\t}\n\n\t/**\n\t* [static] Determines a point between two specified points.\n\t* @param {Point} p1 The first point.\n\t* @param {Point} p2 The second point.\n\t* @param {Number} f The level of interpolation between the two points. Indicates where the new point will be, along the line between pt1 and pt2. If f=1, pt1 is returned; if f=0, pt2 is returned.\n\t* @returns {Point} The new, interpolated point.\n\t*/\n\tstatic interpolate(p1: Point, p2: Point, f: number) {\n\t\tvar pt = new Point();\n\t\tpt.x = p1.x + f * (p2.x - p1.x);\n\t\tpt.y = p1.y + f * (p2.y - p1.y);\n\t\treturn pt;\n\t}\n\n\t/**\n\t* Scales the line segment between (0,0) and the current point to a set length.\n\t* @param {Number} thickness The scaling value. For example, if the current point is (0,5), and you normalize it to 1, the point returned is at (0,1).\n\t*/\n\tnormalize(thickness) {\n\t\tvar ratio = thickness / this.length;\n\t\tthis.x *= ratio;\n\t\tthis.y *= ratio;\n\t}\n\n\t/**\n\t* Offsets the Point object by the specified amount.\n\t* @param {Number} dx The amount by which to offset the horizontal coordinate, x.\n\t* @param {Number} dy The amount by which to offset the vertical coordinate, y.\n\t*/\n\toffset(dx, dy) {\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t* [static] Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t* @param {Number} len The length coordinate of the polar pair.\n\t* @param {Number} angle The angle, in radians, of the polar pair.\n\t* @returns {Point} The Cartesian point.\n\t*/\n\tstatic polar(len, angle) {\n\t\treturn new Point(len * Math.cos(angle), len * Math.sin(angle));\n\t}\n\n\t/**\n\t* Subtracts the coordinates of another point from the coordinates of this point to create a new point.\n\t* @param {Point} v The point to be subtracted.\n\t* @returns {Point} The new point.\n\t*/\n\tsubtract(v) {\n\t\treturn new Point(this.x - v.x, this.y = v.y);\n\t}\n}","import { Point } from \"./Point\";\n\n/**\n* A Rectangle object is an area defined by its position, as indicated by its top-left corner point (x, y) and by its width and its height.\n* The x, y, width, and height properties of the Rectangle class are independent of each other; changing the value of one property has no effect on the others. However, the right and bottom properties are integrally related to those four properties. For example, if you change the value of the right property, the value of the width property changes; if you change the bottom property, the value of the height property changes.\n* @constructor\n* @author Leandro Ferreira\n*/\nexport class Rectangle {\n\tpublic x: number;\n\tpublic y: number;\n\tpublic width: number;\n\tpublic height: number;\n\tconstructor(x: number, y: number, width: number, height: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\t// TODO: test getters/setters below. Never used MDC.\n\tget size() { return new Point(this.width, this.height); };\n\tset size(point) { this.inflatePoint(point); };\n\n\tget top() { return this.y; };\n\tset top(value) { this.y = value; };\n\tget bottom() { return this.y + this.height; };\n\tset bottom(value) { this.height = value - this.y };\n\tget left() { return this.x; };\n\tset left(value) { this.x = value };\n\tget right() { return this.x + this.height; };\n\tset right(value) { this.width = value - this.x };\n\n\tget topLeft() { return new Point(this.left, this.top); };\n\tset topLeft(point) { this.left = point.x; this.top = point.y; };\n\tget topRight() { return new Point(this.right, this.top); };\n\tset topRight(point) { this.right = point.x; this.top = point.y; };\n\tget bottomLeft() { return new Point(this.left, this.bottom); };\n\tset bottomLeft(point) { this.left = point.x; this.bottom = point.y; };\n\tget bottomRight() { return new Point(this.right, this.bottom); };\n\tset bottomRight(point) { this.right = point.x; this.bottom = point.y; };\n\n\t/**\n\t* Returns a new Rectangle object with the same values for the x, y, width, and height properties as the original Rectangle object.\n\t* @returns Rectangle\n\t*/\n\tclone() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t* Determines whether the specified point is contained within the rectangular region defined by this Rectangle object.\n\t* @param {Number} x horizontal position of point.\n\t* @param {Number} y vertical position of point.\n\t* @returns Boolean\n\t*/\n\tcontains(x, y) {\n\t\treturn x > this.left && x < this.right && y > this.top && y < this.bottom;\n\t}\n\n\t/**\n\t* Determines whether the specified point is contained within the rectangular region defined by this Rectangle object.\n\t* @param {Point} point Point to test.\n\t* @returns Boolean\n\t*/\n\tcontainsPoint(point) {\n\t\treturn this.contains(point.x, point.y);\n\t}\n\n\t/**\n\t* Determines whether the Rectangle object specified by the rect parameter is contained within this Rectangle object.\n\t* @param {Rectangle} rect Rectangle to test.\n\t* @returns Boolean\n\t*/\n\tcontainsRect(rect) {\n\t\treturn this.containsPoint(rect.topLeft) && this.containsPoint(rect.bottomRight);\n\t}\n\n\t/**\n\t* Determines whether the object specified in the toCompare parameter is equal to this Rectangle object.\n\t* @param {Rectangle} toCompare Rectangle to test.\n\t* @returns Boolean\n\t*/\n\tequals(toCompare) {\n\t\treturn toCompare.topLeft.equals(this.topLeft) && toCompare.bottomRight.equals(this.bottomRight);\n\t}\n\n\t/**\n\t* Increases the size of the Rectangle object by the specified amounts, in pixels.\n\t* @param {Number} x horizontal amount.\n\t* @param {Number} y vertical amount.\n\t*/\n\tinflate(dx, dy) {\n\t\tthis.width += dx;\n\t\tthis.height += dy;\n\t}\n\n\t/**\n\t* Increases the size of the Rectangle object.\n\t* @param {Point} point Point whose width and height are used to inflate.\n\t*/\n\tinflatePoint(point) {\n\t\tthis.inflate(point.width, point.height);\n\t}\n\n\t/**\n\t* If the Rectangle object specified in the toIntersect parameter intersects with this Rectangle object, returns the area of intersection as a Rectangle object.\n\t* @param {Rectangle} toIntersect Rectangle to intersect.\n\t* @returns resulting Rectangle or null, if they do not intersect.\n\t*/\n\tintersection(toIntersect: Rectangle) {\n\t\tif (this.intersects(toIntersect)) {\n\t\t\tvar t = Math.max(this.top, toIntersect.top);\n\t\t\tvar l = Math.max(this.left, toIntersect.left);\n\t\t\tvar b = Math.min(this.bottom, toIntersect.bottom);\n\t\t\tvar r = Math.min(this.right, toIntersect.right);\n\t\t\treturn new Rectangle(l, t, r - l, b - t);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t* Determines whether the object specified in the toIntersect parameter intersects with this Rectangle object.\n\t* @param {Rectangle} toIntersect Rectangle to test.\n\t* @returns Boolean\n\t*/\n\tintersects(toIntersect) {\n\t\treturn this.containsPoint(toIntersect.topLeft) || this.containsPoint(toIntersect.topRight) || this.containsPoint(toIntersect.bottomLeft) || this.containsPoint(toIntersect.bottomRight);\n\t}\n\n\t/**\n\t* Determines whether or not this Rectangle object is empty.\n\t* @returns Boolean\n\t*/\n\tisEmpty() {\n\t\treturn this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0;\n\t}\n\n\t/**\n\t* Adjusts the location of the Rectangle object, as determined by its top-left corner, by the specified amounts.\n\t* @param {Number} x horizontal amount.\n\t* @param {Number} y vertical amount.\n\t*/\n\toffset(dx, dy) {\n\t\tthis.x += dx;\n\t\tthis.y += dy;\n\t}\n\n\t/**\n\t* Adjusts the location of the Rectangle object using a Point object as a parameter.\n\t* @param {Point} point Point whose x and y are used to offset.\n\t*/\n\toffsetPoint(point) {\n\t\tthis.offset(point.x, point.y);\n\t}\n\n\t/**\n\t* Sets all of the Rectangle object's properties to 0.\n\t*/\n\tsetEmpty() {\n\t\tthis.x = this.y = this.width = this.height = 0;\n\t}\n\n\t/**\n\t* Adds two rectangles together to create a new Rectangle object, by filling in the horizontal and vertical space between the two rectangles.\n\t* @param {Rectangle} toUnion Rectangle to create union.\n\t*/\n\tunion(toUnion) {\n\t\tvar t = Math.min(this.top, toUnion.top);\n\t\tvar l = Math.min(this.left, toUnion.left);\n\t\tvar b = Math.max(this.bottom, toUnion.bottom);\n\t\tvar r = Math.max(this.right, toUnion.right);\n\t\treturn new Rectangle(l, t, r - l, b - t);\n\t}\n\n}","// Ported from Stefan Gustavson's java implementation\n// http://staffwww.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf\n// Sean McCullough banksean@gmail.com\n\nexport type Rand = {\n\n\tseed: number;\n\tnext: () => number;\n\tnextRange: (min, max) => number;\n\tgen: () => number;\n\n}\n\nexport class SimplexNoise {\n\tpublic rand: Rand;\n\tpublic grad3: number[][];\n\tpublic simplex: number[][];\n\tpublic p: number[];\n\tpublic perm: number[];\n\tconstructor(gen:Rand) {\n\t\tthis.rand = gen;\n\t\tthis.grad3 = [\n\t\t\t[1, 1, 0], [-1, 1, 0], [1, -1, 0], [-1, -1, 0],\n\t\t\t[1, 0, 1], [-1, 0, 1], [1, 0, -1], [-1, 0, -1],\n\t\t\t[0, 1, 1], [0, -1, 1], [0, 1, -1], [0, -1, -1]\n\t\t];\n\n\t\tthis.simplex = [\n\t\t\t[0, 1, 2, 3], [0, 1, 3, 2], [0, 0, 0, 0], [0, 2, 3, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 2, 3, 0],\n\t\t\t[0, 2, 1, 3], [0, 0, 0, 0], [0, 3, 1, 2], [0, 3, 2, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 3, 2, 0],\n\t\t\t[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n\t\t\t[1, 2, 0, 3], [0, 0, 0, 0], [1, 3, 0, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2, 3, 0, 1], [2, 3, 1, 0],\n\t\t\t[1, 0, 2, 3], [1, 0, 3, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2, 0, 3, 1], [0, 0, 0, 0], [2, 1, 3, 0],\n\t\t\t[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n\t\t\t[2, 0, 1, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 0, 1, 2], [3, 0, 2, 1], [0, 0, 0, 0], [3, 1, 2, 0],\n\t\t\t[2, 1, 0, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 1, 0, 2], [0, 0, 0, 0], [3, 2, 0, 1], [3, 2, 1, 0]\n\t\t];\n\t}\n\n\tsetSeed(seed) {\n\t\tthis.p = [];\n\t\tthis.rand.seed = seed;\n\n\t\tfor (var i = 0; i < 256; i++) {\n\t\t\tthis.p[i] = Math.floor(this.rand.nextRange(0, 255));\n\t\t}\n\n\t\tthis.perm = [];\n\t\tfor (var i = 0; i < 512; i++) {\n\t\t\tthis.perm[i] = this.p[i & 255];\n\t\t}\n\t}\n\n\tdot(g, x, y) {\n\t\treturn g[0] * x + g[1] * y;\n\t};\n\n\tnoise(xin, yin) {\n\t\tvar n0, n1, n2;\n\n\t\tvar F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\n\t\tvar s = (xin + yin) * F2;\n\t\tvar i = Math.floor(xin + s);\n\t\tvar j = Math.floor(yin + s);\n\t\tvar G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\n\t\tvar t = (i + j) * G2;\n\t\tvar X0 = i - t;\n\t\tvar Y0 = j - t;\n\t\tvar x0 = xin - X0;\n\t\tvar y0 = yin - Y0;\n\n\t\tvar i1, j1;\n\t\tif (x0 > y0) { i1 = 1; j1 = 0; }\n\t\telse { i1 = 0; j1 = 1; }\n\n\t\tvar x1 = x0 - i1 + G2;\n\t\tvar y1 = y0 - j1 + G2;\n\t\tvar x2 = x0 - 1.0 + 2.0 * G2;\n\t\tvar y2 = y0 - 1.0 + 2.0 * G2;\n\n\t\tvar ii = i & 255;\n\t\tvar jj = j & 255;\n\t\tvar gi0 = this.perm[ii + this.perm[jj]] % 12;\n\t\tvar gi1 = this.perm[ii + i1 + this.perm[jj + j1]] % 12;\n\t\tvar gi2 = this.perm[ii + 1 + this.perm[jj + 1]] % 12;\n\n\t\tvar t0 = 0.5 - x0 * x0 - y0 * y0;\n\t\tif (t0 < 0) n0 = 0.0;\n\t\telse {\n\t\t\tt0 *= t0;\n\t\t\tn0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0);\n\t\t}\n\t\tvar t1 = 0.5 - x1 * x1 - y1 * y1;\n\t\tif (t1 < 0) n1 = 0.0;\n\t\telse {\n\t\t\tt1 *= t1;\n\t\t\tn1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1);\n\t\t}\n\t\tvar t2 = 0.5 - x2 * x2 - y2 * y2;\n\t\tif (t2 < 0) n2 = 0.0;\n\t\telse {\n\t\t\tt2 *= t2;\n\t\t\tn2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2);\n\t\t}\n\n\t\treturn 70.0 * (n0 + n1 + n2);\n\t};\n};\n","import { Rectangle } from \"../Rectangle\";\n\nexport class ColorMatrixFilter {\n\tpublic matrix: number[];\n\tconstructor(matrix) {\n\t\tthis.matrix = matrix || [\n\t\t\t1, 0, 0, 0, 0,\n\t\t\t0, 1, 0, 0, 0,\n\t\t\t0, 0, 1, 0, 0,\n\t\t\t0, 0, 0, 1, 0\n\t\t];\n\t}\n\n\trun(sourceRect:Rectangle, image, copy) {\n\t\tvar numPixel = image.length / 4;\n\t\tvar m = this.matrix;\n\n\t\tfor (var i = 0; i < numPixel; i++) {\n\t\t\tvar r = i * 4;\n\t\t\tvar g = r + 1;\n\t\t\tvar b = r + 2;\n\t\t\tvar a = r + 3;\n\n\t\t\tvar oR = image[r];\n\t\t\tvar oG = image[g];\n\t\t\tvar oB = image[b];\n\t\t\tvar oA = image[a];\n\n\t\t\timage[r] = (m[0] * oR) + (m[1] * oG) + (m[2] * oB) + (m[3] * oA) + m[4];\n\t\t\timage[g] = (m[5] * oR) + (m[6] * oG) + (m[7] * oB) + (m[8] * oA) + m[9];\n\t\t\timage[b] = (m[10] * oR) + (m[11] * oG) + (m[12] * oB) + (m[13] * oA) + m[14];\n\t\t\timage[a] = (m[15] * oR) + (m[16] * oG) + (m[17] * oB) + (m[18] * oA) + m[19];\n\t\t}\n\t}\n\n\tclone() {\n\t\treturn new ColorMatrixFilter(this.matrix);\n\t}\n}\n","export let Difference={\n\n\tvsSrc : [\n\t\t\"attribute vec2 pos;\",\n\t\t\"varying vec2 p;\",\t\n\n\t\t\"void main(void) {\",\t\t\n\t\t\"\tp=pos;\",\n\t\t\"\tgl_Position = vec4(pos.x, pos.y, 0.0, 1.0);\",\n\t\t\"}\"\n\t].join(\"\\n\"),\n\t\n\tfsSrc : [\n\t\t\"#ifdef GL_ES\",\n\t\t\"precision highp float;\",\n\t\t\"#endif\",\n\n\t\t\"uniform vec2 r;\",\n\t\t\"uniform vec2 t;\",\n\t\t\"uniform sampler2D tex0;\",\n\t\t\"uniform sampler2D tex1;\",\n\t\t\"uniform mat3 rMat;\",\n\n\t\t\"void main(void) {\",\n\t\t\"\tvec3 t2 = rMat*vec3(gl_FragCoord.x-t.x, gl_FragCoord.y-t.y, 0.0);\",\n\t\t\"\tvec2 p1 = 1.0 - 2.0 * gl_FragCoord.xy / r.xy;\",\n\t\t\"\tvec2 p2 = 1.0 - 2.0 * t2.xy / r.xy;\",\n\t\t\"\tvec3 col = abs(texture2D(tex0,p1).xyz - texture2D(tex1,p2).xyz);\",\n\t\t\"\tgl_FragColor = vec4(col, 1.0);\",\n\t\t\"}\"\n\t].join(\"\\n\")\n\t\n};","import { BlendMode } from \"../bitmap/BitmapData\";\r\nimport { Example } from \"./Example\";\r\n\r\nexport class ExBlendModes extends Example {\r\n    async initialize() {\r\n\r\n        let bmd = this.bmd;\r\n        // let log = document.getElementById(\"log\");\r\n\r\n        let blendModeArray = [\r\n            { mode: BlendMode.ADD, name: \"BlendMode.ADD\" },\r\n            { mode: BlendMode.DARKEN, name: \"BlendMode.DARKEN\" },\r\n            { mode: BlendMode.DIFFERENCE, name: \"BlendMode.DIFFERENCE\" },\r\n            { mode: BlendMode.HARDLIGHT, name: \"BlendMode.HARDLIGHT\" },\r\n            { mode: BlendMode.LIGHTEN, name: \"BlendMode.LIGHTEN\" },\r\n            { mode: BlendMode.MULTIPLY, name: \"BlendMode.MULTIPLY\" },\r\n            { mode: BlendMode.NORMAL, name: \"BlendMode.NORMAL\" },\r\n            { mode: BlendMode.OVERLAY, name: \"BlendMode.OVERLAY\" },\r\n            { mode: BlendMode.SCREEN, name: \"BlendMode.SCREEN\" },\r\n            { mode: BlendMode.SUBTRACT, name: \"BlendMode.SUBTRACT\" }\r\n        ];\r\n\r\n        let bikes = await this.createImage(\"res/bikes.png\")\r\n\r\n        let lenna = await this.createImage(\"res/lenna-300x300.png\")\r\n  \r\n        let counter = 0;\r\n        function cycle() {\r\n            bmd.draw(bikes);\r\n            bmd.draw(lenna, null, null, blendModeArray[counter].mode);\r\n\r\n            // log.innerHTML = blendModeArray[counter].name;\r\n\r\n            if (counter == blendModeArray.length - 1) {\r\n                counter = 0;\r\n            } else {\r\n                counter++;\r\n            }\r\n        }\r\n\r\n        cycle();\r\n        setInterval(cycle, 500);\r\n    }\r\n}","import { BitmapData, BitmapDataChannel } from \"../bitmap/BitmapData\";\r\nimport { Point } from \"../bitmap/Point\";\r\nimport { Rectangle } from \"../bitmap/Rectangle\";\r\nimport { Example } from \"./Example\";\r\n\r\nexport class ExChannels extends Example {\r\n    async initialize() {\r\n   \r\n        let bikes = await this.createImage(\"res/bikes.png\")\r\n\r\n        this.bmd.draw(bikes);\r\n        \r\n        let lenna = await this.createImage(\"res/lenna-300x300.png\")\r\n\r\n        let leenaData = new BitmapData(300, 300);\r\n        leenaData.draw(lenna);\r\n        \r\n        this.bmd.copyChannel(leenaData, \r\n            new Rectangle(50, 50, 200, 200), \r\n            new Point(50, 50), \r\n            BitmapDataChannel.GREEN, \r\n            BitmapDataChannel.GREEN);\r\n    }\r\n}","import { BitmapData } from \"../bitmap/BitmapData\";\r\nimport { ColorMatrixFilter } from \"../bitmap/filters/ColorMatrixFilter\";\r\nimport { Point } from \"../bitmap/Point\";\r\nimport { Example } from \"./Example\";\r\n\r\nexport class ExColorMatrixFilter extends Example {\r\n    private canvas2:HTMLCanvasElement;\r\n    async initialize() {\r\n    \r\n        let canvas2 =this.canvas2= this.createCanvas(300,300);\r\n        \r\n        let bikes = await this.createImage(\"res/bikes.png\")\r\n        let bikesData = new BitmapData(300, 300);\r\n        \r\n        var invertMatrix=[\r\n                            -1, 0, 0, 0, 255,\r\n                            0, -1, 0, 0, 255,\r\n                            0, 0, -1, 0, 255,\r\n                            0, 0, 0, 1, 0\r\n                         ];\r\n                                  \r\n        var brightness=[\r\n                            2, 0, 0, 0, 0,\r\n                            0, 2, 0, 0, 0,\r\n                            0, 0, 2, 0, 0,\r\n                            0, 0, 0, 1, 0\r\n                         ];\r\n        \r\n        var invertFilter=new ColorMatrixFilter(invertMatrix);\r\n        var brightnessFilter=new ColorMatrixFilter(brightness);\r\n        \r\n        var zeroPoint=new Point();\r\n        \r\n        bikesData.draw(bikes);\r\n        bikesData.applyFilter(bikesData, bikesData.rect, zeroPoint, invertFilter);\r\n        let context = this.canvas.getContext(\"2d\");\r\n        context.putImageData(bikesData.data, 0, 0);\r\n        \r\n        bikesData.draw(bikes);\r\n        bikesData.applyFilter(bikesData, bikesData.rect, zeroPoint, brightnessFilter);\r\n        context = canvas2.getContext(\"2d\");\r\n        context.putImageData(bikesData.data, 0, 0);\r\n    }\r\n\r\n    dispose(): void {\r\n        super.dispose();\r\n        this.canvas2.parentElement.removeChild(this.canvas2);\r\n    }\r\n}","import { ColorTransform } from \"../bitmap/ColorTransform\";\r\nimport { Rectangle } from \"../bitmap/Rectangle\";\r\nimport { Example } from \"./Example\";\r\n\r\nexport class ExColorTransform extends Example {\r\n    async initialize() {\r\n        \r\n        let bikes = await this.createImage(\"res/bikes.png\")\r\n\r\n        this.bmd.draw(bikes);\r\n        \r\n        let colorTrans = new ColorTransform(1, 0, 1, 1, 180);\r\n        let rect = new Rectangle(20, 20, 200, 200);\r\n        \r\n        this.bmd.colorTransform(rect, colorTrans);\r\n    }\r\n}","import { BitmapDataChannel } from \"../bitmap/BitmapData\";\r\nimport { Point } from \"../bitmap/Point\";\r\nimport { Example } from \"./Example\";\r\n\r\nexport class ExDefault extends Example {\r\n    async initialize() {\r\n        let bmd = this.bmd;\r\n        \r\n        for (var i = 0; i<100; i++) {\r\n            for (var j = 0; j<300; j++) {\r\n                var d = Math.pow(i-50, 2) + Math.pow(j-150, 2);\r\n                var r = Math.sin(Math.sqrt(d) * 10 * Math.PI/180);\r\n                var color = 100 + 100 * r << 16;\r\n                bmd.setPixel( i, j, color );\r\n            }\r\n        }\r\n\r\n        bmd.copyChannel(bmd,\r\n            bmd.rect,\r\n            new Point(100, 0),\r\n            BitmapDataChannel.RED,\r\n            BitmapDataChannel.GREEN);\r\n\r\n        bmd.copyChannel(bmd,\r\n            bmd.rect,\r\n            new Point(200, 0),\r\n            BitmapDataChannel.RED,\r\n            BitmapDataChannel.BLUE);\r\n\r\n    }\r\n}","import { BitmapData } from \"../bitmap/BitmapData\";\r\nimport { Matrix } from \"../bitmap/Matrix\";\r\nimport { Difference } from \"../bitmap/modes/Difference\";\r\nimport { Point } from \"../bitmap/Point\";\r\nimport { Rectangle } from \"../bitmap/Rectangle\";\r\nimport { Example } from \"./Example\";\r\n\r\nexport class ExGPU extends Example {\r\n    async initialize() {\r\n       \r\n        let context = this.canvas.getContext(\"2d\");\r\n\r\n        let lenna = await this.createImage(\"res/tex7.jpg\")\r\n\r\n        let large =  await this.createImage(\"res/tex0.jpg\")\r\n\r\n        var bmd = new BitmapData(512, 512, false, 0xff0000);\r\n        bmd.initProgram(Difference);\r\n        bmd.initTexture(0, lenna);\r\n        bmd.initTexture(1, large);\r\n    \r\n        let clipping = new Rectangle(0, 0, 512, 512);\r\n        let point = new Point(0, 0);\r\n        let rotoMatrix = new Matrix(1, 0, 0, 1, 150.0, 150.0);\r\n\r\n        let zoomMax = 30.0;\r\n        let zoomMin = -20.0;\r\n        let dz = 0.025;\r\n        let dr= 0.02;\r\n        let angle = 0;\r\n        let zoom = zoomMin;\r\n        let isZoomIncreasing = true;\r\n            \r\n        setInterval(function() {\r\n            if ( isZoomIncreasing )\tzoom = zoom + dz;\r\n            else zoom = zoom - dz;\t\r\n\r\n            angle = angle + dr;\r\n\r\n            if ( angle > 360 ) angle = 0;\r\n\r\n            if ( zoom > zoomMax ) {\r\n                isZoomIncreasing = false;\r\n                zoom = zoomMax;\r\n            } else if ( zoom < zoomMin ) {\r\n                isZoomIncreasing = true;\r\n                zoom = zoomMin;\r\n            }\r\n\r\n            rotoMatrix.a = Math.cos(angle) * zoom;\r\n            rotoMatrix.b = Math.sin(angle);\r\n            rotoMatrix.c = -Math.sin(angle);\r\n            rotoMatrix.d = Math.cos(angle) * zoom;\r\n\r\n            bmd.drawGL(rotoMatrix);\r\n\r\n            context.putImageData(bmd.data, 0, 0);\r\n        }, 10);\r\n    }\r\n}","import { BitmapDataChannel } from \"../bitmap/BitmapData\";\r\nimport { Example } from \"./Example\";\r\n\r\nexport class ExNoise extends Example {\r\n    initialize() {\r\n        this.bmd.perlinNoise(\r\n            this.bmd.width / 2,\r\n            this.bmd.height / 2,\r\n            Math.floor(Math.random() * 0xffff),\r\n            BitmapDataChannel.RED | BitmapDataChannel.BLUE,\r\n            false\r\n        );\r\n    }\r\n}","import { BitmapData } from \"../bitmap/BitmapData\";\r\nimport { Point } from \"../bitmap/Point\";\r\nimport { Example } from \"./Example\";\r\n\r\nexport class ExPalettemap extends Example {\r\n    async initialize() {\r\n\r\n        let lenna = await this.createImage(\"res/lenna-300x300.png\")\r\n\r\n        let lennaData = new BitmapData(300, 300);\r\n        lennaData.draw(lenna);\r\n\r\n        let colorModifier = 1;\r\n        let rArray = [], gArray = [], bArray = [];\r\n        let point = new Point(0, 0);\r\n        let rate = 1;\r\n        this.startTick(() => {\r\n\r\n            colorModifier += rate;\r\n            if (colorModifier < 0) {\r\n                rate = 1;\r\n                return;\r\n            }\r\n            if (colorModifier > 125) {\r\n                rate = -1;\r\n                return;\r\n            }\r\n            for (let i = 0; i < 256; i++) {\r\n                let r = i + colorModifier;\r\n                if (r > 255) r = r - 256;\r\n\r\n                let g = i + colorModifier + r;\r\n                if (g > 255) g = g - 256;\r\n\r\n                let b = i + colorModifier + g;\r\n                if (b > 255) b = b - 256;\r\n\r\n                rArray[i] = r;\r\n                gArray[i] = g;\r\n                bArray[i] = b;\r\n            }\r\n\r\n            this.bmd.paletteMap(lennaData, lennaData.rect, point, rArray, gArray, bArray);\r\n        });\r\n    }\r\n}","import { BitmapData } from \"../bitmap/BitmapData\";\r\nimport { Point } from \"../bitmap/Point\";\r\nimport { Rectangle } from \"../bitmap/Rectangle\";\r\nimport { Example } from \"./Example\";\r\nexport class ExPlasma extends Example {\r\n    async initialize() {\r\n\r\n        let context = this.canvas.getContext(\"2d\");\r\n\r\n        function dist(a, b, c, d) {\r\n            return Math.sqrt(((a - c) * (a - c) + (b - d) * (b - d)));\r\n        }\r\n\r\n        this.startTick(() => {\r\n            let time = new Date().getTime() / 50;\r\n\r\n            for (let y = 0; y < this.bmd.height; y++) {\r\n                for (let x = 0; x < this.bmd.width; x++) {\r\n                    let rgb = Math.sin(dist(x + time, y, 128.0, 128.0) / 8.0)\r\n                        + Math.sin(dist(x, y, 64.0, 64.0) / 8.0)\r\n                        + Math.sin(dist(x, y + time / 7, 192.0, 64) / 7.0)\r\n                        + Math.sin(dist(x, y, 192.0, 100.0) / 8.0);\r\n\r\n                    let c = (4 + rgb) * 32;\r\n                    this.bmd.setPixel(x, y, c << 16 | (c * 2) << 8 | 255 - c);\r\n                }\r\n            }\r\n\r\n            context.putImageData(this.bmd.data, 0, 0);\r\n        });\r\n    }\r\n}","import { BitmapData } from \"../bitmap/BitmapData\";\r\nimport { Matrix } from \"../bitmap/Matrix\";\r\nimport { Point } from \"../bitmap/Point\";\r\nimport { Rectangle } from \"../bitmap/Rectangle\";\r\nimport { Example } from \"./Example\";\r\n\r\nexport class ExRotozoomer extends Example {\r\n    async initialize() {\r\n       \r\n        let lenna = await this.createImage(\"res/lenna-300x300.png\")\r\n    \r\n        let clipping = new Rectangle(10, 10, 280, 280);\r\n        let rotoMatrix = new Matrix(1, 0, 0, 1, 150, 150);\r\n        \r\n        let zoomMax = 0.2;\r\n        let zoomMin = -0.4;\r\n        let dz = 0.015;\r\n        let dr= 0.01;\r\n        let angle = 0;\r\n        let zoom = zoomMin;\r\n        let isZoomIncreasing = true;\r\n        \r\n        this.startTick(()=> {\r\n            if ( isZoomIncreasing )\tzoom = zoom + dz;\r\n            else zoom = zoom - dz;\t\r\n\r\n            angle = angle + dr;\r\n\r\n            if ( angle > 360 ) angle = 0;\r\n\r\n            if ( zoom > zoomMax ) {\r\n                isZoomIncreasing = false;\r\n                zoom = zoomMax;\r\n            } else if ( zoom < zoomMin ) {\r\n                isZoomIncreasing = true;\r\n                zoom = zoomMin;\r\n            }\r\n\r\n            rotoMatrix.a = Math.cos(angle) * zoom;\r\n            rotoMatrix.b = Math.sin(angle);\r\n            rotoMatrix.c = -Math.sin(angle);\r\n            rotoMatrix.d = Math.cos(angle) * zoom;\r\n            \r\n            \r\n            this.bmd.draw(lenna, rotoMatrix, null, null, null);\r\n        });\r\n    }\r\n}","import { BitmapData } from \"../bitmap/BitmapData\";\r\nimport { Point } from \"../bitmap/Point\";\r\nimport { Rectangle } from \"../bitmap/Rectangle\";\r\nimport { Example } from \"./Example\";\r\n\r\nexport class ExThreshold extends Example {\r\n    async initialize() {\r\n\r\n        let bikes = await this.createImage(\"res/bikes.png\")\r\n        bikes.src = \"res/bikes.png\";\r\n        this.bmd.draw(bikes);\r\n\r\n        let lenna = await this.createImage(\"res/lenna-300x300.png\")\r\n\r\n        let lennaData = new BitmapData(300, 300);\r\n        lennaData.draw(lenna);\r\n\r\n        let threshold = 0x333333;\r\n        let rect = new Rectangle(100, 100, 200, 200);\r\n        let point = new Point(50, 50);\r\n        let rate: number = 1;\r\n        this.startTick(() => {\r\n\r\n            threshold += 0x00eeee * rate;\r\n            if (threshold >= 0xffffff) {\r\n                rate = -1;\r\n                return;\r\n            }\r\n            if (threshold <= 0x333333) {\r\n                rate = 1;\r\n                return;\r\n            }\r\n            this.bmd.draw(bikes);\r\n            this.bmd.threshold(lennaData,\r\n                rect,\r\n                point,\r\n                \"<\",\r\n                threshold,\r\n                0x00ff00,\r\n                null,\r\n                true);\r\n        });\r\n    }\r\n}","import { BitmapData } from \"../bitmap/BitmapData\";\r\n\r\nexport abstract class Example {\r\n    protected canvas: HTMLCanvasElement\r\n    protected bmd: BitmapData;\r\n    constructor() {\r\n        let canvas: HTMLCanvasElement = this.canvas = this.createCanvas(300, 300);\r\n        this.bmd = (canvas as any).bitmapData;\r\n        this.initialize();\r\n    };\r\n\r\n    createCanvas(width?, height?) {\r\n        let canvas: HTMLCanvasElement = document.createElement(\"canvas\") as HTMLCanvasElement;\r\n        document.getElementById(\"container\").appendChild(canvas);\r\n        canvas.width = width || 300;\r\n        canvas.height = height || 300;\r\n        return canvas;\r\n    }\r\n\r\n    createImage(url: string) {\r\n        return new Promise<HTMLImageElement>(reslove => {\r\n            let imag = new Image();\r\n            imag.src = url;\r\n            imag.onload = function () {\r\n                imag.onload = null;\r\n                reslove(imag);\r\n            }\r\n        })\r\n    }\r\n    private tickHandler: number;\r\n    startTick(method: Function) {\r\n        let start = performance.now();\r\n        let step = (timestamp) => {\r\n            const elapsed = timestamp - start\r\n            method(elapsed)\r\n            this.tickHandler = window.requestAnimationFrame(step)\r\n        }\r\n        this.tickHandler = window.requestAnimationFrame(step)\r\n    }\r\n\r\n    abstract initialize()\r\n\r\n    dispose() {\r\n        this.canvas.parentElement.removeChild(this.canvas);\r\n        window.cancelAnimationFrame(this.tickHandler);\r\n        this.bmd.dispose();\r\n    }\r\n}","import { Example } from \"./examples/Example\";\r\nimport { ExBlendModes } from \"./examples/ExBlendModes\";\r\nimport { ExChannels } from \"./examples/ExChannels\";\r\nimport { ExColorMatrixFilter } from \"./examples/ExColorMatrixFilter\";\r\nimport { ExColorTransform } from \"./examples/ExColorTransform\";\r\nimport { ExDefault } from \"./examples/ExDefault\";\r\nimport { ExGPU } from \"./examples/ExGPU\";\r\nimport { ExNoise } from \"./examples/ExNoise\";\r\nimport { ExPalettemap } from \"./examples/ExPalettemap\";\r\nimport { ExPlasma } from \"./examples/ExPlasma\";\r\nimport { ExRotozoomer } from \"./examples/ExRotozoomer\";\r\nimport { ExThreshold } from \"./examples/ExThreshold\";\r\n\r\nexport class Main {\r\n    private curExample:Example;\r\n    private curName:string;\r\n    constructor(){\r\n        let examples=[\r\n            {name:\"default\",clazz:ExDefault},\r\n            {name:\"channels\",clazz:ExChannels},\r\n            {name:\"blendmodes\",clazz:ExBlendModes},\r\n            {name:\"colorMatrixFilter\",clazz:ExColorMatrixFilter},\r\n            {name:\"colorTransform\",clazz:ExColorTransform},\r\n            {name:\"noise\",clazz:ExNoise},\r\n            {name:\"palettemap\",clazz:ExPalettemap},\r\n            {name:\"plasma\",clazz:ExPlasma},\r\n            {name:\"rotozoomer\",clazz:ExRotozoomer},\r\n            {name:\"threshold\",clazz:ExThreshold},\r\n            {name:\"gpu\",clazz:ExGPU}\r\n        ]\r\n        let links=document.createElement(\"div\")\r\n        document.body.appendChild(links)\r\n        let ul=document.createElement(\"ul\");\r\n        links.appendChild(ul);\r\n        examples.forEach(v=>{\r\n            let li=document.createElement(\"li\")\r\n            let a=document.createElement(\"a\");\r\n            li.appendChild(a);\r\n            ul.appendChild(li);\r\n            a.textContent=v.name;\r\n            a.style.cursor=\"pointer\";\r\n            a.onclick=this.clickHandler.bind(this,v);\r\n        });\r\n    \r\n        this.curExample=new ExDefault();\r\n        this.curName=\"default\";\r\n    }\r\n\r\n    clickHandler(info){\r\n        if(this.curName!=info.name){\r\n            this.curName=info.name;\r\n            this.curExample.dispose();\r\n            this.curExample=new info.clazz();\r\n        }\r\n    }\r\n}\r\n\r\nnew Main();"],"sourceRoot":""}